import { PostList } from '@/components/board/post';
import axios from 'axios';
import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css';
import { useRouter } from 'next/router';
import type { NextPage, NextPageContext } from 'next';
import type { BoardResponse } from 'types/api';
import type { Post } from 'types/post';
import { deleteCookie, getCookie } from 'utils';

interface HomeProps {
  isLogin: boolean;
}

const Home: NextPage<HomeProps> = ({ isLogin }) => {
  const [data, setData] = useState<Post[]>([]);

  const router = useRouter();

  async function fetch() {
    const { data } = await axios.get<BoardResponse>('/api/board');
    setData(data.content);
  }

  useEffect(() => {
    fetch();
  }, []);

  function handleSignInClick() {
    router.push('/signin');
  }
  function handleSignUpClick() {
    router.push('/signup');
  }

  async function handleLogoutClick() {
    if (getCookie('login')) {
      deleteCookie('login');
      await axios.post('/api/session/logout');
      router.push('/');
    }
  }

  function handleNewPostClick() {
    router.push('/post/new');
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>야옹아 멍멍해봐</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {!isLogin && <button onClick={handleSignInClick}>로그인</button>}
        {!isLogin && <button onClick={handleSignUpClick}>회원가입</button>}
        <button onClick={handleNewPostClick}>글쓰기</button>
        {isLogin && <button onClick={handleLogoutClick}>로그아웃</button>}
        <PostList items={data} />
      </main>
    </div>
  );
};

Home.getInitialProps = (ctx: NextPageContext) => {
  const isLogin = getCookie('login', ctx);

  return { isLogin: !!isLogin };
};
export default Home;
