# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info

# jobs:
#   CI:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'adopt'
#         cache: gradle      
#     - name: Grant execute permission for gradlew
#       run: chmod +x BarkingCat/gradlew
#     - name: Build with Gradle
#       run: |
#         cd BarkingCat
#         sudo ./gradlew build
#     - name: Build Docker Image
#       uses: mr-smithers-excellent/docker-build-push@v5
#       with:
#         image: rkdals213/barking-cat
#         tags: latest
#         registry: docker.io
#         username: ${{ secrets.DOCKER_ID }}
#         password: ${{ secrets.DOCKER_PW }}
        
#   sonarcloud:
#     runs-on: ubuntu-latest
#     env:
#         GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#     steps:
#     - uses: actions/checkout@v2
#     - name: SonarCloud Scan
#       uses: sonarsource/sonarcloud-github-action@master
#     - name: Build and analyze     
#       run: ./gradlew build sonarqube --info
# #       run: |
# #         cd BarkingCat
# #         sudo ./gradlew -B verify sonar:sonar \
# #          -Dsonar.projectKey=cat:barking \
# #          -Dsonar.organization=barking-cat \
# #          -Dsonar.host.url=https://sonarcloud.io \
# #          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        
#   deploy:
#     needs: CI
#     name: Deploy
#     runs-on: [ self-hosted ]
#     steps:
#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           registry: docker.io
#           username: ${{ secrets.DOCKER_ID }}
#           password: ${{ secrets.DOCKER_PW }}
#       - name: Docker run
#         run: |
#           docker stop barking-cat && docker rm -fv barking-cat
#           docker rmi -f rkdals213/barking-cat
#           docker run -d -p 8080:8080 --name barking-cat --restart always rkdals213/barking-cat:latest
